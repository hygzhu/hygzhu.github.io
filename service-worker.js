"use strict";var precacheConfig=[["/index.html","ca75158a1ebd421cb89b59b9a1e27348"],["/static/css/main.9c92fe70.css","d5c7fdc4bcb3e8482cee2db246aa068e"],["/static/js/main.ce7d0de6.js","00d27e259814cee7f33279c82a49af03"],["/static/media/alexa.7974cf87.jpg","7974cf87d21105f2aa34a24088cd9c76"],["/static/media/clap.90b7d8b9.jpg","90b7d8b940b08cd62ec7a5eb1009224e"],["/static/media/discord.5ff23215.png","5ff232157d19b921f7dc016519e3c577"],["/static/media/eye.1de12957.png","1de1295778b1d60945f7717e1099abb8"],["/static/media/eye_phone.cb848c0b.png","cb848c0b80ca5c04e8b03fd97fc6d061"],["/static/media/giphy.41dd26d5.jpg","41dd26d57e210fafd773f04a28ad9cb2"],["/static/media/hearthstone.9ad0756f.png","9ad0756f28f126c76c51f6a328cf08cd"],["/static/media/keyboard.da73c3b7.png","da73c3b7990cea37bddf2638643803f0"],["/static/media/linkedin.6976c96a.png","6976c96a4793fa60b9d370410bef647e"],["/static/media/p2s.4d9b0357.png","4d9b0357e9b4ba0ab1e2830b4876449c"],["/static/media/reddit-script.e44d48cb.jpg","e44d48cb4d9d8646d787d56917921fa6"],["/static/media/searchandpro.b160ad1a.png","b160ad1afbd37a8d191bc8beb50902b3"],["/static/media/senior.e1ca6a4e.jpg","e1ca6a4e125ac01bb0d99ec60fe209c9"],["/static/media/simulator.8cc6b91a.jpg","8cc6b91ae61f25b06fcddf21096d4ac7"],["/static/media/talcum.b47b0fb0.jpg","b47b0fb00ed46db31f97885d552b5a3e"],["/static/media/uwaterloo.d9cda810.png","d9cda810fe25048254fe31aaaa08ca8c"],["/static/media/watson.94e8d0d0.jpg","94e8d0d03c3d8d8fa79255ad61aab2d6"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});